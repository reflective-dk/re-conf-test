{
  "name": "re-conf-test",
  "version": "1.0.0",
  "description": "Configuration objects for test data",
  "main": "index.js",
  "scripts": {
    "list-integrations": "list-integrations",
    "build": "build-objects",
    "clean": "rm -Rf ./build",
    "deploy": "npm run upload; re add -j build/objects.json; npm run validate",
    "upload": "if [ -d data ]; then find data -type f -exec binadd {} \\; ; fi",
    "validate": "re validate -j build/objects.json > build/validation-results.json",
    "postvalidate": "npm run showvalidationlist; npm run showvalidationresult",
    "showvalidationlist": "cat build/validation-results.json | jq -c '.objects | .[].registrations[0].validity[0].input | { subjectId: .subject.id, subjectClass: (.subjectClass.id + \" (\" +.subjectClass.name + \")\"), severity: .severity, validations: .validations }'",
    "showvalidationresult": "cat build/validation-results.json | jq '.objects | [ .[].registrations[0].validity[0].input.validations | .[].severity ] | unique | if (. == [ \"none\" ]) then \"=== validation ok ===\" else \"=== VALIDATION FAILED: \" + (. | tostring) + \" ===\"end'",
    "test": "mocha --recursive"
  },
  "repository": {
    "type": "git",
    "url": "git+ssh://git@github.com/reflective-dk/re-conf-test.git"
  },
  "keywords": [
    "reflective",
    "configuration",
    "test"
  ],
  "author": "Reflective Code <code@reflective.dk>",
  "license": "UNLICENSED",
  "private": true,
  "dependencies": {
    "re-models": "git+ssh://git@github.com/reflective-dk/re-models.git",
    "re-conf-util": "git+ssh://git@github.com/reflective-dk/re-conf-util.git"
  },
  "devDependencies": {
    "re-core-cli": "git+ssh://git@github.com:reflective-dk/re-core-cli.git",
    "shelljs": "^0.8.1"
  }
}
